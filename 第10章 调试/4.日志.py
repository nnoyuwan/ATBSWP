# 如果你曾经在代码中加入 print() 语句，在程序运行时输出某些变量的值，你
# 就使用了记日志的方式来调试代码。记日志是一种很好的方式，可以理解程序中
# 发生的事，以及事情发生的顺序。 Python 的 logging 模块使得你很容易创建自定义
# 的消息记录。这些日志消息将描述程序执行何时到达日志函数调用，并列出你指
# 定的任何变量当时的值。另一方面，缺失日志信息表明有一部分代码被跳过，从
# 未执行。

# 10.4.1 使用日志模块
# 要启用 logging 模块，在程序运行时将日志信息显示在屏幕上，请将下面的代
# 码复制到程序顶部（但在 Python 的#!行之下）：

import logging

logging.basicConfig(level=logging.DEBUG, format=' %(asctime)s - %(levelname)s - %(message)s')

