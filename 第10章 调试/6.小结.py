# 断言、异常、日志和调试器，都是在程序中发现和预防缺陷的有用工具。用
# Python 语句实现的断言，是实现心智正常检查的好方式。如果必要的条件没有保持
# 为 True，它将尽早给出警告。断言所针对的错误，是程序不应该尝试恢复的，而是
# 应该快速失败。否则，你应该抛出异常。

# 异常可以由 try 和 except 语句捕捉和处理。 logging 模块是一种很好的方式， 可以
# 在运行时查看代码的内部，它比使用 print() 函数要方便得多，因为它有不同的日志
# 级别，并能将日志写入文本文件。

# 调试器让你每次单步执行一行代码。或者，可以用正常速度运行程序， 并让
# 调试器暂停在设置了断点的代码行上。利用调试器，你可以看到程序在运行期间，
# 任何时候所有变量的值。

# 这些调试工具和技术将帮助你编写正确工作的程序。不小心在代码中引入缺
# 陷，这是不可避免的，不论你有多少年的编码经验。
